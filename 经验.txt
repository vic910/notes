我目前是两者并行。考研与找工作不冲突。我面试完一轮后，整理出面试会问到的知识点，跟考研是重合的。
1. C#基础知识、类型底层、GC底层、编译器底层
2. Lua基础知识、XLua底层
3. 图形学、render pipeline细节
4. Unity基础、各组件底层、物理底层
5. 数据结构与演算法（被问过常用数据结构、红黑树、排序、寻路、随机算法）
6. 计算机组织（被问过内存架构、数组的遍历为何比List快）
7. 计算机网路（被问过websocket如何实现）
8. 设计模式
9. 线性代数与离散数学（被问过齐次矩阵、如何判断一点是否在多边形内、概率问题）

作者：鹅厂程序小哥
链接：https://zhuanlan.zhihu.com/p/341369700
来源：知乎
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。

大家好，我是程序小哥。今天，讲一讲我是如何进入腾讯的，我之前做了哪些准备？也希望可以能帮到大家。我之前是用Unity引擎开发游戏的，用的是C#语言。我在之前的工作整理了自己的一套游戏开发框架包括UI开发框架，资源加载管理，打包流程框架，对象池管理，热更新框架等等。然后准备了C#的语法，高级特性，比如字符串常量池，拆装箱，GC原理等。数据结构和算法上，比如快速排序算法，二叉树查找，二叉树遍历，A*寻路算法，C#的容器List，Dictionary等实现原理，常用的一些设计模式。我们之前采用的热更新方案是XLua，所以准备了一些Lua语法，还有C#和Lua语言之间的互相调用。还有准备了渲染方面的一些知识，比如图形渲染管线的整个流程是怎样的，它的每个阶段做了什么事情。Unity Shader的语法，实际的渲染需求开发中，遇到的一些问题解决方案和优化方案。然后根据自己的工作经验梳理了一套游戏性能优化的方案包括CPU优化，GPU优化，内存优化，帧率优化等方面的问题定位手段和解决的方案。因为我从Unity引擎转到Unreal引擎开发的，所以我又准备了C++的语法，高级特性，比如类型转换，智能指针，右值引用，移动构造函数等。还有C++的STL标准模板库的list，vector等容器的实现原理等。在Unreal引擎开发游戏时，采用的热更新方案是UnLua，也准备了C++和Lua语言之间的互相调用知识。在Unreal引擎方面，总结了GamePlay框架，蓝图，UMG，行为树，动画蓝图等，也阅读了Unreal引擎部分源码的比如Unreal垃圾回收的实现，资源加载，反射机制，图形渲染管线等。我也还在不断学习，希望可以跟大家共同交流，共同进步。